version: 2.1

jobs:
    build:
        working_directory: ~/circleci-cyptopals
        docker:
            - image: circleci/python:3.8.5
              environment:
                PIPENV_VENV_IN_PROJECT: true
                GIT_LFS_SKIP_SMUDGE: 1
        steps:
            - run:
                command: |
                    sudo apt install git-lfs
                    git lfs install
            - checkout
            - run: sudo chown -R circleci:circleci /usr/local/bin
            - run: sudo chown -R circleci:circleci /usr/local/lib/python3.8/site-packages
            - run: |
                git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-idents
            - restore_cache:
                key: v1-lfs-{{ .Branch }}-{{ checksum ".lfs-idents" }}
            - run: |
                git lfs pull
            - save_cache:
                key: v1-lfs-{{ .Branch }}-{{ checksum ".lfs-idents" }}
                paths:
                    - .git/lfs
            - restore_cache:
                key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
            - run:
                command: |
                    sudo pip install pipenv
                    pipenv install
            - save_cache: # cache Python dependencies using checksum of Pipfile as the cache-key
                key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
                paths:
                    - "venv"
            - run:
                command: |
                    mkdir -p ~/circleci-cryptopals/test-results
                    pipenv run ./base.py --output ~/circleci-cryptopals/test-results
            - store_test_results:
                path: ~/circleci-cryptopals/test-results
            - store_artifacts:
                path: ~/circleci-cryptopals/test-results
                destination: tr1

#orbs:
#  python: circleci/python@0.2.1
#
#jobs:
#  build-and-test:
#    executor: python/default
#    steps:
#      - checkout
#      - python/load-cache
#      - python/install-deps
#      - python/save-cache
#      - run:
#          command: ./manage.py test
#          name: Test
#
#workflows:
#  main:
#    jobs:
#      - build-and-test
